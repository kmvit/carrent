<!-- Дополнительные скрипты -->
<script src="https://unpkg.com/aos@next/dist/aos.js"></script>
<script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
<script>
    // Инициализация AOS с проверкой
    if (typeof AOS !== 'undefined') {
        AOS.init({
            disable: 'mobile',
            once: true,
            duration: 800,
            offset: 100
        });
    }

    // Инициализация карты с проверкой
    if (typeof ymaps !== 'undefined') {
        ymaps.ready(function () {
            const mapElement = document.getElementById('map');
            if (mapElement) {
                var myMap = new ymaps.Map('map', {
                    center: [44.013908, 43.079125],
                    zoom: 15
                });

                var myPlacemark = new ymaps.Placemark([44.013908, 43.079125], {
                    balloonContent: 'Premium Car Rental<br>г. Пятигорск, Горячеводский'
                }, {
                    preset: 'islands#goldDotIcon'
                });

                myMap.geoObjects.add(myPlacemark);
            }
        });
    }
</script>

<script>
    // Функция для работы с галереей
    function changeImage(thumbnail) {
        const mainImage = document.getElementById('mainImage');
        const imageCounter = document.getElementById('imageCounter');
        if (!mainImage || !imageCounter) return;
        
        const index = parseInt(thumbnail.getAttribute('data-index')) + 1;
        
        mainImage.src = thumbnail.src;
        imageCounter.textContent = `${index}/${thumbnail.parentElement.children.length}`;
        
        // Обновляем активную миниатюру
        document.querySelectorAll('.thumbnail').forEach(thumb => {
            thumb.classList.remove('ring-2', 'ring-[#e8b98b]');
        });
        thumbnail.classList.add('ring-2', 'ring-[#e8b98b]');
    }

    // Устанавливаем активную миниатюру при загрузке страницы
    document.addEventListener('DOMContentLoaded', function() {
        const firstThumbnail = document.querySelector('.thumbnail');
        if (firstThumbnail) {
            firstThumbnail.classList.add('ring-2', 'ring-[#e8b98b]');
        }
    });
</script>

<!-- Фиксированная кнопка WhatsApp -->
<a href="https://wa.me/79643833383" class="whatsapp-fixed" target="_blank">
    <i class="fab fa-whatsapp"></i>
</a>

<!-- Yandex.Metrika counter -->
<script type="text/javascript" >
    (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
    m[i].l=1*new Date();
    for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
    k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
    (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");
 
    ym(102558859, "init", {
         clickmap:true,
         trackLinks:true,
         accurateTrackBounce:true,
         webvisor:true
    });
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/102558859" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->

<!-- Скрипт для модального окна бронирования -->
<script>
// Функции для работы с модальным окном
function openBookingModal(carId) {
    const modal = document.getElementById('bookingModal');
    const carIdInput = document.getElementById('carId');
    if (modal && carIdInput) {
        carIdInput.value = carId;
        modal.classList.remove('hidden');
    }
}

function closeBookingModal() {
    const modal = document.getElementById('bookingModal');
    if (modal) {
        modal.classList.add('hidden');
    }
}

// Обработка формы бронирования
document.addEventListener('DOMContentLoaded', function() {
    const bookingForm = document.getElementById('bookingForm');
    const closeModalBtn = document.getElementById('closeModal');
    const modal = document.getElementById('bookingModal');

    // Обработка кнопок "Забронировать" на главной странице
    document.querySelectorAll('.btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const carCard = this.closest('.car-card');
            if (carCard) {
                const carLink = carCard.querySelector('a');
                if (carLink) {
                    const carId = carLink.getAttribute('href').split('=')[1];
                    openBookingModal(carId);
                }
            }
        });
    });

    // Обработка кнопок "Забронировать" в разделе индивидуальных туров
    document.querySelectorAll('.book-tour-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const tourType = this.getAttribute('data-tour-type');
            const tourPrice = this.getAttribute('data-tour-price');
            openBookingModal(`tour_${tourType}_${tourPrice}`);
        });
    });

    if (closeModalBtn) {
        closeModalBtn.addEventListener('click', closeBookingModal);
    }

    if (modal) {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeBookingModal();
            }
        });
    }

    if (bookingForm) {
        bookingForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(bookingForm);
            const data = {
                carId: formData.get('carId'),
                name: formData.get('name'),
                phone: formData.get('phone')
            };

            try {
                const response = await fetch('/api/bookings', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    alert('Ваша заявка успешно отправлена! Мы свяжемся с вами в ближайшее время.');
                    bookingForm.reset();
                    closeBookingModal();
                } else {
                    throw new Error(result.message || 'Произошла ошибка при отправке заявки');
                }
            } catch (error) {
                alert('Произошла ошибка при отправке заявки. Пожалуйста, попробуйте позже.');
                console.error('Ошибка:', error);
            }
        });
    }
});
</script>